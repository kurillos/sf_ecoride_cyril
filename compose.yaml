version: '3.8'

services:
    php-fpm:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        container_name: symfony_php
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
            - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
        ports:
            - "9000:9000"
        depends_on:
            - database
        networks:
            - symfony_network
        env_file:
            - ./.env.local            

    nginx:
        image: nginx:alpine
        container_name: symfony_nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php-fpm
        networks:
            - symfony_network

    database:
        image: mysql:${MYSQL_VERSION:-8.0}
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${MYSQL_DB:-ecoride_db}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
            MYSQL_USER: ${MYSQL_USER:-app}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-root}
        volumes:
            - database_data:/var/lib/mysql:rw
        ports:
            - "3306:3306"
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 5s
            retries: 5
            start_period: 30s
        networks:
            - symfony_network

    mailhog:
        image: mailhog/mailhog:latest
        container_name: mailhog
        restart: always
        ports:
            - "1025:1025" # Port SMTP pour l'envoi d'emails
            - "8025:8025" # Port HTTP pour l'interface web
        logging:
            driver: 'none'
        networks:
            - symfony_network

networks:
    symfony_network:
        driver: bridge

volumes:
    database_data: